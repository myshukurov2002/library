package com.company.library_project.entity;import com.company.library_project.entity.base.StringBaseEntity;import com.company.library_project.entity.profile.ProfileEntity;import com.company.library_project.enums.BookStatus;import jakarta.persistence.*;import lombok.Getter;import lombok.Setter;import java.time.LocalDate;import java.util.List;@Setter@Getter@Entity@Table(name = "book")public class BookEntity extends StringBaseEntity {//id, title, author, category, publishDate, availableDay, visible, createdDate    @Column(name = "title", nullable = false, length = 100)    private String title;    @Column(name = "author", nullable = false, length = 100)    private String author;    @ManyToOne    @JoinColumn(name = "category_id", insertable = false, updatable = false)    private CategoryEntity categoryEntity;    @Column(name = "category_id")    private String categoryId;    @ManyToOne    @JoinColumn(name = "wardrobe_id", insertable = false, updatable = false)    private WardrobeEntity wardrobeEntity;    @Column(name = "wardrobe_id")    private String wardrobeId;    @Column(name = "published_date")    private LocalDate publishedDate;    @Enumerated(EnumType.STRING)    @Column(name = "status")    private BookStatus bookStatus = BookStatus.AVAILABLE;    @OneToMany(mappedBy = "bookEntity", fetch = FetchType.EAGER)    private List<TakenBookEntity> takenBookEntities;    @ManyToOne    @JoinColumn(name = "owner_id", insertable = false, updatable = false)    private ProfileEntity profileEntity;    @Column(name = "owner_id")    private String ownerId;}